@model StudentTracker.Core.Entities.Organization
@{
    ViewBag.Title = "Update Organization";
    string token = DateTime.UtcNow.Ticks.ToString();
}
@Scripts.Render("~/bundles/jqueryval")
@Html.Hidden("token", token)
@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal no-margin", @id = "myform" }))
{
    <div class="row-fluid">
        <div class="span12">
            <div class="widget">
                <div class="widget-header">
                    <div class="title textAlign">
                        Modify Organization
                    </div>
                    <span class="tools tls2">
                         <a name="submit" class="btn btn-primary" href="javascript:;" action="Edit" onclick="Save(event)" id="btnUpdateOrg">Save</a>
                        <a class="btn btn-info" href="/Organization" data-original-title="">Cancel</a></span>
                </div>
                <div class="widget-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.OrganizationId)
                    @Html.HiddenFor(m => m.CreatedBy)
                    @Html.HiddenFor(m => m.CreatedDate)
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationName, new { Class = "control-label" })
                        <div class="controls controls-row">
                            @Html.TextBoxFor(m => m.OrganizationName, new { placeholder = "OrganizationName", Class = "span6" })
                            @Html.ValidationMessageFor(m => m.OrganizationName)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationDesc, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextAreaFor(m => m.OrganizationDesc, new { placeholder = "Description", Class = "span6", @rows = 4, @cols = 400 })
                            @Html.ValidationMessageFor(m => m.OrganizationDesc)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationTypeId, new { Class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.OrganizationTypeId, Model.OrganizationTypeList, "Select Organization", new { Class = "span6" })
                            @Html.ValidationMessageFor(m => m.OrganizationId)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.RegisterationNumber, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.RegisterationNumber, new { placeholder = "Registeration Number", Class = "span6" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(m => m.CountryId, new { Class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.CountryId, Model.CountryList, "Select Country", new { Class = "span6" })
                            @Html.ValidationMessageFor(m => m.CountryId)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.StateId, new { Class = "control-label" })
                        <div class="controls">
                            @Html.DropDownListFor(m => m.StateId, Model.StateList, "Select Region", new { Class = "span6" })
                            @Html.ValidationMessageFor(m => m.StateId)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.City, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.City, new { placeholder = "City", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Address1, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Address1, new { placeholder = "Address1", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Address2, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Address2, new { placeholder = "Address2", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Email, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Phone1, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Phone1, new { placeholder = "Phone1", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Phone2, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Phone2, new { placeholder = "Phone2", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @HelperAssets.FileUploadHtml()
                    </div>
                    Html.RenderAction("ShowAttachedFiles", "Files", new { itemid = Model.OrganizationId, type = this.ViewContext.Controller.GetType().Name, isEditMode = true });

                </div>
            </div>
        </div>
    </div>
}
@HelperAssets.FileUploadScript(token);

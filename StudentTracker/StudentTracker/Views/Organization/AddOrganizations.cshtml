@model StudentTracker.Core.Entities.Organization
@{
    ViewBag.Title = "AddOrganizations";
}
<div class="row-fluid">
    <div class="span12">
        <div class="widget">
            <div class="widget-header">
                <div class="title">
                    Create New Organization
                      <span class="mini-title">Simple form for new Account
                      </span>
                </div>
                <span class="tools">
                    <a class="fs1" aria-hidden="true" data-icon="" data-original-title=""></a>
                </span>
            </div>
            <div class="widget-body">

                <form class="form-horizontal no-margin" id="myform">
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationName, new { Class = "control-label" })
                        <div class="controls controls-row">
                            @Html.TextBoxFor(m => m.OrganizationName, new { placeholder = "First Name", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationDesc, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.OrganizationDesc, new { placeholder = "Description", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganizationTypeId, new { Class = "control-label" })
                        <div class="controls">
                            @Html.DropDownList("OrganizationTypeId", null, "Select Organization", new { required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.RegisterationNumber, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.RegisterationNumber, new { placeholder = "Registeration Number", Class = "span6", required = "required" })
                        </div>
                    </div>

                    <div class="control-group">
                        @Html.LabelFor(m => m.CountryId, new { Class = "control-label" })
                        <div class="controls">
                            @*@Html.DropDownList("CountryId", "Select Country")*@
                            @Html.DropDownList("CountryId", null, "Select Country", new { required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.StateId, new { Class = "control-label" })
                        <div class="controls">
                            @Html.DropDownList("StateId", null, "Select State", new { required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.City, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.City, new { placeholder = "City", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Address1, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Address1, new { placeholder = "Address1", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Address2, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Address2, new { placeholder = "Address2", Class = "span6" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Email, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Email, new { placeholder = "Email", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Phone1, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Phone1, new { placeholder = "Phone1", Class = "span6", required = "required" })
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.Phone2, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextBoxFor(m => m.Phone2, new { placeholder = "Phone2", Class = "span6" })
                        </div>
                    </div>
                    <div class="form-actions no-margin">
                        @* <button type="submit" class="btn btn-info pull-right">
                                Create Organization
                            </button>*@
                        <input type="button" value="Add Organization" id="btnAddOrg" />
                        <div class="clearfix">
                        </div>
                    </div>

                </form>

            </div>
        </div>
    </div>

</div>


<script type="text/javascript">
    $(document).ready(function () {
        // just for the demos, avoids form submit
        jQuery.validator.setDefaults({
            debug: true,
            success: "valid"
        });
        var form = $("#myform");
        form.validate();
        $("#btnAddOrg").click(function () {

            var $this = $(this);
            if (form.valid()) {
                var objCandidate = $('#myform').serializeObject();
                alert(JSON.stringify(objCandidate));
                $.ajax({
                    url: '/Organization/AddOrganizations',
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json;',
                    data: JSON.stringify(objCandidate),
                    success: function (data) {
                        if (data == 'True') {
                            $('#myform').children().find('input[type=text]').each(function () {
                                $this.val('');
                            });
                        }
                    },
                    error: function () { }
                });
            }
        });
    });





    //This function is used to serialize a form into json object.
    $.fn.serializeObject = function () {
        var o = {};
        var a = this.serializeArray();
        $.each(a, function () {
            if (o[this.name] !== undefined) {
                if (!o[this.name].push) {
                    o[this.name] = [o[this.name]];
                }
                o[this.name] = this.value || '';
            } else {
                o[this.name] = this.value || '';
            }
        });
        return o;
    };


</script>

@model StudentTracker.Core.Entities.Post
@{
    
 
    
    
}
<style>
    .textarea {
        width: 600px;
    }
</style>
<script src="~/Scripts/tiny_mce/tiny_mce.js"></script>
<script src="../../Scripts/bootstrap-multiselect.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $('.multiselect').multiselect({
            numberDisplayed: 7,
            includeSelectAllOption: false,
            enableFiltering: true,
            buttonWidth: '253px'
        });

        tinymce.init({
            selector: "textarea",
            width: '100%',

        });

    });
</script>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12">
            @using (Html.BeginForm("AddEditPost", "Admin", FormMethod.Post, new { id = "AddEditPostForm", enctype = "multipart/form-data", @class = "form-horizontal", @role = "form" }))
            {
                @Html.HiddenFor(m => m.Id)
                <div class="control-group">
                    @Html.LabelFor(m => m.Title, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", @autocomplete = "off", @placeholder = "Title" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.ShortDescription, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(m => m.ShortDescription, new { @class = "textarea", @autocomplete = "off", @placeholder = "ShortDescription" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Description, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextAreaFor(m => m.Description, new { @class = "textarea", autocomplete = "off", placeholder = "Description", rows = "20" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Category, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(m => m.CategoryId, (SelectList)ViewBag.Categoris, "--- Choose Category ---", new { Class = "form-control", @required = "required" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Tags, new { @class = "control-label" })
                    <div class="controls">
                        @Html.DropDownListFor(m => m.TagList, (MultiSelectList)ViewBag.Tags, new { Class = "form-control multiselect", @required = "required", @multiple = "multiple" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Meta, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.Meta, new { Class = "form-control", autocomplete = "off", placeholder = "Meta" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.UrlSlug, new { @class = "control-label" })
                    <div class="controls">
                        @Html.TextBoxFor(m => m.UrlSlug, new { @class = "form-control", @autocomplete = "off", @placeholder = "UrlSlug" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(m => m.Published, new { @class = "control-label" })
                    <div class="controls">
                        @Html.CheckBoxFor(m => m.Published, new { Class = "form-control", autocomplete = "off" })
                    </div>
                </div>
            }
        </div>
    </div>
</div>

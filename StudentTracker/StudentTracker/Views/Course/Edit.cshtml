@model StudentTracker.Core.Entities.Course

@{
    ViewBag.Title = "Edit";
    string token = DateTime.UtcNow.Ticks.ToString();
}
@Html.Hidden("token", token)
@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal no-margin", @id = "myform" }))
{
    <div class="row-fluid">
        <div class="span12">
            <div class="widget">
                <div class="widget-header">
                    <div class="title textAlign">
                        Modify Course
                    </div>
                    <span class="tools tls2">
                        <a name="submit" class="btn btn-primary" href="javascript:;" action="Edit" onclick="Save(event)" id="btnAdd">Save</a>
                        <a class="btn btn-info" href="/Course" data-original-title="">Cancel</a></span>
                </div>
                <div class="widget-body">

                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.CourseId)
                    @Html.HiddenFor(m => m.CreatedBy)
                    @Html.HiddenFor(m => m.InsertedOn)
                    <div class="control-group">
                        @Html.LabelFor(m => m.OrganisationId, new { Class = "control-label" })
                        <div class="controls">
                            @if (User.IsInRole("SiteAdmin"))
                            {
                                @Html.DropDownListFor(m => m.OrganisationId, Model.OrganizationList, "Select Organization", new { Class = "span6" })
                                
                            }
                            else
                            {
                                @ViewBag.Organization
                                @Html.HiddenFor(m => m.OrganisationId)
                            }
                            @Html.ValidationMessageFor(m => m.OrganisationId)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.CourseName, new { Class = "control-label" })
                        <div class="controls controls-row">
                            @Html.TextBoxFor(m => m.CourseName, new { placeholder = "Course Name", Class = "span6" })
                            @Html.ValidationMessageFor(m => m.CourseName)
                        </div>
                    </div>
                    <div class="control-group">
                        @Html.LabelFor(m => m.CourseDescription, new { Class = "control-label" })
                        <div class="controls">
                            @Html.TextAreaFor(m => m.CourseDescription, new { placeholder = "Description", Class = "span6", @rows = 4, @cols = 400 })
                            @Html.ValidationMessageFor(m => m.CourseDescription)
                        </div>
                    </div>
                    <div class="control-group">
                        @HelperAssets.FileUploadHtml()
                    </div>
                    @{
    Html.RenderAction("ShowAttachedFiles", "Files", new { itemid = Model.CourseId, type = this.ViewContext.Controller.GetType().Name, isEditMode = true });
                    }
                </div>
            </div>
        </div>

    </div>
}
@Scripts.Render("~/bundles/jqueryval")

@HelperAssets.FileUploadScript(token);

@model StudentTracker.ViewModels.StaffViewModel
@{
    ViewBag.Title = "CreateStaff";
    Layout = "~/Views/Shared/_LayoutBlueMoon.cshtml";
}

<div class="sub-nav">
</div>
<div class="dashboard-wrapper">
    @using (Html.BeginForm("Edit", "Staff", null, FormMethod.Post, new { @class = "form-horizontal" }))
    {
        <div class="left-sidebar">
            @Html.HiddenFor(m => m.UserId)
            <div class="row-fluid">
                <div class="span12">
                    <div class="widget">
                        <div class="widget-header">
                            <div class="title textAlign">
                                Edit Staff
                            </div>
                            <span class="tools tls2">
                                <a class="btn btn-info" href="#" id="lnkSave" data-original-title="">Save</a>
                                <a class="btn btn-info" href="/Staff" data-original-title="">Cancel</a></span>
                        </div>


                        <div class="widget-body">
                            <div class="container-fluid">

                                <div class="row-fluid">
                                    <div class="span3">
                                        <div class="thumbnail">
                                            <img alt="300x200" src="/img/profile.png"><a class="file-input-wrapper btn btn-info cangePic" data-original-title="">
Change Picture
                                                        <input type="file">
                                            </a>

                                        </div>
                                    </div>
                                    <div class="span9">
                                        <form class="form-horizontal">

                                            <div class="control-group">
                                                <label class="control-label">
                                                    Title
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.Title, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.Title)
                                                </div>
                                            </div>

                                            <div class="control-group">
                                                <label class="control-label">
                                                    First Name
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.FirstName, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.FirstName)
                                                </div>
                                            </div>


                                            <div class="control-group">
                                                <label class="control-label">
                                                    Last Name
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.LastName, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.LastName)
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                <label class="control-label">
                                                    DOB
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "span8 txtDateFormat" })
                                                    @Html.ValidationMessageFor(x => x.DateOfBirth)
                                                </div>
                                            </div>


                                            <div class="control-group">
                                                <label class="control-label">
                                                    Phone
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.MobileNumber, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.MobileNumber)
                                                </div>
                                            </div>

                                            <div class="control-group">
                                                <label class="control-label">
                                                    Home
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.HomeTelephoneNumber, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.HomeTelephoneNumber)
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                <label class="control-label">
                                                    Email
                                                </label>
                                                <div class="controls">
                                                    @Html.TextBoxFor(x => x.Email, new { @class = "span8" })
                                                    @Html.ValidationMessageFor(x => x.Email)
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                <label class="control-label">
                                                    Staff Type
                                                </label>
                                                <div class="controls">
                                                    @Html.DropDownListFor(m => m.StaffTypeId, Model.StaffTypeList, "Select Staff Type")
                                                    @Html.ValidationMessageFor(x => x.StaffTypeId)
                                                </div>
                                            </div>

                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="row-fluid">

                <div class="span12">
                    <div class="widget">
                        <div class="widget-header">
                            <div class="title">
                                Assign Department/Classes
                            </div>

                        </div>

                        <div class="row-fluid">
                            <div class="span12">

                                <div class="widget-body topUp">
                                    <table class="table table-bordered no-margin">
                                        <tbody>
                                            @for (int i = 0; i < 10; i++)
                                            {
                                                if (i + 1 > Model.Count)
                                                { 
                                                <tr style="display: none" class="tableRow">
                                                    <td class="tdCourse">
                                                        @Html.DropDownListFor(m => m.ListFields[i].CourseId, Model.ListFields[i].CourseList, "Select Course", new { onChange = "loadClass(event)", Class = "selectList Course", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.CourseId)
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(m => m.ListFields[i].DepartmentId, Model.ListFields[i].DepartmentList, "Select Department", new { Class = "selectList Department", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.DepartmentId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].ClassId, Model.ListFields[i].ClassList, "Select Class", new { onChange = "loadSection(event)", id = "ClassId", Class = "Class selectList", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.ClassId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].SectionId, Model.ListFields[i].SectionList, "Select Section", new { id = "SectionId", Class = "Section selectList", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.SectionId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].SubjectId, Model.ListFields[i].SubjectList, "Select Subject", new { id = "SectionId", Class = "Subject selectList", disabled = "disabled" })
                                                        @Html.ValidationMessageFor(m => m.SubjectId)
                                                    </td>
                                                    <td>
                                                        <a onclick="updateCourseDepartments(event)" style="display: none" class="lnkSave btn btn-info">Save</a>
                                                    </td>
                                                    <td class="hidden-phone tdLast" style="width: 90px;">
                                                        <div class="dropdown">
                                                        </div>
                                                    </td>
                                                </tr>
                                                }
                                                else
                                                {
                                                <tr class="tableRow">
                                                    <td>
                                                        @Html.DropDownListFor(m => m.ListFields[i].CourseId, Model.ListFields[i].CourseList, "Select Course", new { onChange = "loadClass(event)", action = "GetClasses", getType = "Class", Class = "Course" })
                                                        @Html.ValidationMessageFor(m => m.CourseId)
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(m => m.ListFields[i].DepartmentId, Model.ListFields[i].DepartmentList, "Select Department", new { Class = "Department" })
                                                        @Html.ValidationMessageFor(m => m.DepartmentId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].ClassId, Model.ListFields[i].ClassList, "Select Class", new { onChange = "loadSection(event)", id = "ClassId", Class = "Class" })
                                                        @Html.ValidationMessageFor(m => m.ClassId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].SectionId, Model.ListFields[i].SectionList, "Select Section", new { id = "SectionId", Class = "Section" })
                                                        @Html.ValidationMessageFor(m => m.SectionId)
                                                    </td>
                                                    <td class="hidden-phone">
                                                        @Html.DropDownListFor(m => m.ListFields[i].SubjectId, Model.ListFields[i].SubjectList, "Select Subject", new { id = "SectionId", Class = "Subject" })
                                                        @Html.ValidationMessageFor(m => m.SubjectId)
                                                    </td>
                                                    <td>
                                                        <a onclick="updateCourseDepartments(event)" class="lnkSave btn btn-info" id="@Model.ListFields[i].Id">Save</a>
                                                    </td>
                                                    <td class="hidden-phone tdLast" style="width: 90px;">
                                                        @if (i + 1 == Model.Count)
                                                        {
                                                            <div class="dropdown">
                                                                <a onclick="addMore(event)" class="lnkAddMore btn btn-info" id="">Add More</a>
                                                            </div>
                                                        }
                                                    </td>
                                                </tr>
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="right-sidebar">
            @Html.Partial("_RightMenuPartial")
        </div>
    }
</div>
<div id="dialog"></div>

@section scripts{
    <style type="text/css">
        .selectList {
            display: none;
        }
    </style>
    <script type="text/javascript">

        $(document).ready(function () {
            $('#lnkSave').click(function () {
                $('.form-horizontal').submit();
            });
            $('.txtDateFormat').datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '-90:+0'
            });

            $('#divIndividual').addClass('selected');

        });

        function loadClass(e) {
            var id = $(e.target).val();
            var row = '';
            var appendTo = $(e.target).parent().parent().children().find('.Class');
            $(appendTo).html('<option value = "">--Select Class--</option>');
            $.ajax({
                type: 'GET',
                url: '/Global/GetClasses',
                data: { id: id },
                success: function (response) {
                    $.each(response, function (index, value) {
                        row += '<option value=' + value.ClassId + '>' + value.ClassName + '</option>';
                    });
                    $(appendTo).append(row);
                }
            })
        }

        function loadSection(e) {
            var id = $(e.target).val();
            var row = '';
            var appendTo = $(e.target).parent().parent().children().find('.Section');
            $(appendTo).html('<option value = "">--Select Section--</option>');
            $.ajax({
                type: 'GET',
                url: '/Global/GetSection',
                data: { id: id },
                success: function (response) {
                    $.each(response, function (index, value) {
                        row += '<option value=' + value.SectionId + '>' + value.SectionName + '</option>';
                    });
                    $(appendTo).append(row);
                    loadSubjects(e);
                }
            })
        }

        function addMore(e) {
            var $this = $(e.target);
            if ($this.text().trim() == 'Add More') {
                appendNewRow($this);
            }
            else if ($this.text().trim() == 'Save') {
                var validate = true;
                var root = $this.parent().parent().parent().children();
                if (root.find('.Course').val() == '' || root.find('.Class').val() == '' || root.find('.Section').val() == '' || root.find('.Subject').val() == '') {
                    validate = false;
                }
                if (validate) {
                    var parameters = {

                        userId: $('#UserId').val(),
                        courseId: root.find('.Course').val(),
                        departmentId: root.find('.Department').val(),
                        classId: root.find('.Class').val(),
                        sectionId: root.find('.Section').val(),
                        subjectId: root.find('.Subject').val()
                    }
                    $.ajax({
                        type: 'POST',
                        url: '/Staff/AddMoreDepartmentClasses',
                        data: parameters,
                        success: function (response) {
                            if (response > 0) {
                                appendNewRow($this);
                                root.find('.lnkSave').show();
                                root.find('.lnkSave').attr('id', response);
                            }
                            else {
                                alert('Error while updating records');
                            }
                        },
                        error: function () { }
                    });
                }
                else {
                    alert('Please select all the fields');
                }

            }
        }

        function appendNewRow($this) {

            if ($this.text().trim() == 'Add More') {
                var root = $this.parent().parent().parent().next();
                root.show();
                root.children().find('.selectList').removeAttr('disabled');
                root.children().find('.dropdown').append($('.lnkAddMore'));
                $this.text('Save');
            }
            else if ($this.text().trim() == 'Save') {
                $this.text('Add More');
            }
        }

        function loadSubjects(e) {
            var id = $(e.target).val();
            var row = '';
            var appendTo = $(e.target).parent().parent().children().find('.Subject');
            $(appendTo).html('<option value = "">--Select Subject--</option>');
            $.ajax({
                type: 'GET',
                url: '/Global/GetSubjectByClass',
                data: { classId: id },
                success: function (response) {
                    $.each(response, function (index, value) {
                        row += '<option value=' + value.SubjectId + '>' + value.SubjectName + '</option>';
                    });
                    $(appendTo).append(row);
                }
            })
        }

        function updateCourseDepartments(e) {
            var $this = $(e.target);
            var validate = true;
            var root = $this.parent().parent().parent().children();
            if (root.find('.Course').val() == '' || root.find('.Class').val() == '' || root.find('.Section').val() == '' || root.find('.Subject').val() == '') {
                validate = false;
            }
            if (validate) {
                var parameters = {
                    Id: $this.attr('id'),
                    userId: $('#UserId').val(),
                    courseId: root.find('.Course').val(),
                    departmentId: root.find('.Department').val(),
                    classId: root.find('.Class').val(),
                    sectionId: root.find('.Section').val(),
                    subjectId: root.find('.Subject').val()
                }
                $.ajax({
                    type: 'POST',
                    url: '/Staff/UpdateTeacherSubjects',
                    data: parameters,
                    success: function (response) {
                        if (response == 'True') {

                        }
                        else {
                            //alert('Error while updating records');
                        }
                    },
                    error: function () { }
                });
            }
            else {
                alert('Please select all the fields');
            }
        }
    </script>
}